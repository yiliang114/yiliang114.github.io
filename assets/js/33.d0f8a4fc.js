(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{476:function(e,t,r){"use strict";r.r(t);var n=r(3),a=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"electron"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#electron"}},[e._v("#")]),e._v(" electron")]),e._v(" "),t("h2",{attrs:{id:"api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[e._v("#")]),e._v(" api")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.w3cschool.cn/electronmanual/",target:"_blank",rel:"noopener noreferrer"}},[e._v("中文"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://electron.atom.io/docs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("英文"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"electron-项目与-web-项目的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#electron-项目与-web-项目的区别"}},[e._v("#")]),e._v(" electron 项目与 web 项目的区别")]),e._v(" "),t("p",[e._v("electron 核心可以分为两个部分，主进程和渲染进程。主进程连接着操作系统和渲染进程，可以看作页面和计算机沟通的桥梁；渲染进程就是熟悉的前端环境了。")]),e._v(" "),t("p",[e._v("传统的 web 环境，我们是不能对用户的系统系统进行操作的，而 electron 相当于 node 环境，我们可以在项目里使用所有 node api。简单理解，就是为 web 项目套上了一个 node 环境的壳。")]),e._v(" "),t("h2",{attrs:{id:"主进程与渲染进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主进程与渲染进程"}},[e._v("#")]),e._v(" 主进程与渲染进程")]),e._v(" "),t("p",[e._v("Electron 运行的"),t("code",[e._v("package.json")]),e._v("的 "),t("code",[e._v("main")]),e._v("脚本的进程成为"),t("strong",[e._v("主进程")]),e._v("。在主进程中运行的脚本通过创建 web 也 main 来展示用户界面，一个 electron 应用总是有且只有一个主进程。")]),e._v(" "),t("p",[e._v("electron 使用了 chromium 来展示 web 页面，所以 chromium 的多进程架构也被使用到。每一个 electron 中的 web 页面运行在它自己的"),t("strong",[e._v("渲染进程")])]),e._v(" "),t("p",[e._v("中。")]),e._v(" "),t("p",[e._v("普通浏览器中，web 页面通常在一个沙盒环境中运行，不允许去接触原生的 i 资源。然而 electron 的用户在 nodejs api 的支持下可以在页面和操作系统中进行一些底层交互。")])])}),[],!1,null,null,null);t.default=a.exports}}]);